import math
'''
https://projecteuler.net/problem=45
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle: T_n = n(n+1)/2
Pentagonal: P_n = n(3n - 1)/2
Hexagonal: H_n = n(2n - 1)

It can be verified that T_285 = P_165 = H_143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
'''
# by solving the equation h = H_n using the quadratic formula, we obtain criteria for h being hexagonal. This allows us to write an efficient function to check for hexagonality. The same approach produces a function to check for pentagonality.

# more generally, let P(n) be a degree 2 polynomial such that P(0) = 0 and let t be an integer. Then we can determine whether the equation t = P(n) has an integer solution by looking at the discriminant of P(n) - t = 0.


def T(n):
    return int(n * (n + 1) / 2)


def P(n):
    return int(n * (3 * n - 1) / 2)


def H(n):
    return int(n * (2 * n - 1))


def isT(t):
    sqrt = math.isqrt(int(1 + 8 * t))
    return sqrt ** 2 == 1 + 8 * t and (sqrt - 1) % 2 == 0


def isP(p):
    sqrt = math.isqrt(int(1 + 24 * p))
    return sqrt ** 2 == 1 + 24 * p and (1 + sqrt) % 6 == 0


def isH(h):
    sqrt = math.isqrt(int(8 * h + 1))
    return sqrt ** 2 == 8 * h + 1 and (1 + sqrt) % 4 == 0


limit = 10 ** 5

for i in range(limit):
    t = T(i)
    if isP(t) and isH(t):
        print(t)
