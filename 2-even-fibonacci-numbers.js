/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

// -------------- SOLUTION --------------------

const fibonacciSequence = (n) => {
  // return an array of Fibonacci numbers whose values do not exceed n
  let sequence = [1, 1];
  let i = 1;
  while (sequence[0] + sequence[1] <= n) {
    sequence.unshift(sequence[0] + sequence[1]);
  }
  return sequence.reverse();
};

const sumOfEvenFibonacciTerms = (n) => {
  // return the sum of the even-valued Fibonacci numbers whose values do not exceed four million.
  return fibonacciSequence(n).reduce((prev, cur) => {
    if (cur % 2 === 0) {
      return cur + prev;
    } else {
      return prev;
    }
  }, 0);
};

const answer = sumOfEvenFibonacciTerms(4000000);

// ---------------------------------------------
