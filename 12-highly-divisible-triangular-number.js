/*

The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?

*/

// STRATEGY 1:

// loop through the triangular numbers

// factor each one

// count the factors (all of them, not just the prime ones)

// stop when count > 500

const countFactors = (n) => {
  // brute force the number of factors of n
  let count = 0;
  for (let i = 1; i <= n; i++) {
    if (n % i === 0) {
      count++;
    }
  }
  return count;
};

const triangular = (n) => {
  return (n * (n + 1)) / 2;
};

const answer = () => {
  let n = 1;
  let t = 1;

  while (countFactors(t) <= 5 && n < 10 ** 6) {
    // limit to 1 million tries, for the moment
    n++;
    t = triangular(n);
  }
  console.log(t);
  return t;
};

answer();
